{
  "hash": "10513220b776937961b86ee81f9dfc5a",
  "result": {
    "engine": "knitr",
    "markdown": "# Decomposition of Trends\n\n## Loading Data\n\nNote: All Abundances have been filtered out to only contain relative abundances \\> 0.01\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: permute\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThis is vegan 2.6-4\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: ape\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: nlme\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:nlme':\n\n    collapse\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:ape':\n\n    where\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\ncorrplot 0.92 loaded\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::collapse() masks nlme::collapse()\n✖ dplyr::filter()   masks stats::filter()\n✖ dplyr::lag()      masks stats::lag()\n✖ dplyr::where()    masks ape::where()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\n\n\nAttaching package: 'ggpubr'\n\n\nThe following object is masked from 'package:ape':\n\n    rotate\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'tseries' was built under R version 4.3.3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \nNew names:New names:\n```\n\n\n:::\n:::\n\n\n\n\n## Seasonal Decomposition\n\nFor Shannon Index\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# otu_1_shannon %>% decompose(type=\"additive\") %>%\n#   autoplot()\n```\n:::\n\n\n\n\nResult: Error in `decompose()`: ! time series has no or less than 2 periods\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# otu_1_abundance %>% decompose(type=\"additive\") %>%\n#   autoplot()\n\n# otu_1_count%>% decompose(type=\"additive\") %>%\n#   autoplot()\n```\n:::\n\n\n\n\nResult: Error in `decompose()`: ! time series has no or less than 2 periods\n\n## STL Decomposition\n\nFor Shannon Index\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# otu_1_shannon  %>%\n#   stl(s.window=\"periodic\", robust=TRUE) %>%\n#   autoplot()\n\n# otu_1_abundance  %>%\n#   stl(s.window=\"periodic\", robust=TRUE) %>%\n#   autoplot()\n```\n:::\n\n\n\n\nResult: Error in `decompose()`: ! time series has no or less than 2 periods\n\n## Stationarity Check\n\nAugmented Dickey-Fuller Test: This is a statistical test that checks for the presence of a unit root in the time series. If the test indicates that there is no unit root, then the time series is likely stationary.\n\nFor Shannon Index\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadf_test_shannon <- adf.test(otu_1_shannon)\nprint(adf_test_shannon)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  otu_1_shannon\nDickey-Fuller = -1.9299, Lag order = 4, p-value = 0.6044\nalternative hypothesis: stationary\n```\n\n\n:::\n:::\n\n\n\n\nResult: Not Stationary\n\nFor OTU 1 Counts\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadf_test_otu <- adf.test(otu_1_abundance)\nprint(adf_test_otu)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tAugmented Dickey-Fuller Test\n\ndata:  otu_1_abundance\nDickey-Fuller = -2.6805, Lag order = 4, p-value = 0.2971\nalternative hypothesis: stationary\n```\n\n\n:::\n\n```{.r .cell-code}\n#adf.test(otu_1_count) \n```\n:::\n\n\n\n\nResult: Not Stationary\n\nKwiatkowski-Phillips-Schmidt-Shin Test: his test checks for the presence of a trend or structural break in the time series. If the test indicates that there is no trend or structural break, then the time series may be considered stationary.\n\nFor Shannon Index\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkpss.test(otu_1_shannon)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in kpss.test(otu_1_shannon): p-value smaller than printed p-value\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tKPSS Test for Level Stationarity\n\ndata:  otu_1_shannon\nKPSS Level = 0.89563, Truncation lag parameter = 3, p-value = 0.01\n```\n\n\n:::\n:::\n\n\n\n\nResult: Not Stationary\n\nFor OTU 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#on relative abudance\nkpss.test(otu_1_abundance)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in kpss.test(otu_1_abundance): p-value smaller than printed p-value\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tKPSS Test for Level Stationarity\n\ndata:  otu_1_abundance\nKPSS Level = 0.92455, Truncation lag parameter = 3, p-value = 0.01\n```\n\n\n:::\n\n```{.r .cell-code}\nkpss.test(otu_1_count)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in kpss.test(otu_1_count): p-value smaller than printed p-value\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tKPSS Test for Level Stationarity\n\ndata:  otu_1_count\nKPSS Level = 0.89444, Truncation lag parameter = 3, p-value = 0.01\n```\n\n\n:::\n:::\n\n\n\n\nResult: Not Stationary\n\n## Conclusion\n\nThere are no cyclical trends in either our shannon index or in our otu_1 abundance Our data is considered non-stationary which would make it not possible to model a time series based on previous time values\n\n## So what can we model?\n\nThere does seem to be a correlation between different groups of OTU's- lets examine this:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Counts\n# cor_mat = otu_counts[,-1]\n# #cor() computes the correlation coefficient\n# c_m = cor( cor_mat, method = \"pearson\")\n\n#Relative Abundance\notu_p_wide <- otu_p %>%\n  pivot_wider(names_from = OTU, values_from = Abundance) %>%\n  replace(is.na(.), 0)\n#remove date column\notu_p_wide = otu_p_wide[,-1]\nc_m_a = cor(otu_p_wide, method = \"pearson\")\n\n#heatmap(c_m)\n```\n:::\n\n\n\n\nResults show: - When calculating correlation coefficient between counts- little to no correlation between OTU's - When calculating correlation coefficient between relative abundance- high correlations can be seen",
    "supporting": [
      "trend_decomposition_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}