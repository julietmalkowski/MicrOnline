{
  "hash": "0a39c452640b45b6a4f265ddafc1ab27",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Correlations\n---\n\n\n\nCorrelations describe the strength of association between two variables. By understanding if specific species have any relevant associations, it could be possible to determine a larger microbial community composition from just a few individual species.\n\n\n\n## Correlation between count data with Pearson Correlation Coefficient \nPearson’s Product - Moment Correlation Coefficient is a statistical measure of the strength of a linear relationship between paired data. It assumes that the data is:\n- interval or ratio level\n- linearly related\n- bivariate normally distributed\n\nThis graph shows correlations higher than 75%\n\n::: {#ea162951 .cell execution_count=2}\n``` {.python .cell-code}\ncorrelation = np.corrcoef(a.T)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n/Users/julietmalkowski/Desktop/Research/Micro/env/lib/python3.10/site-packages/numpy/lib/_function_base_impl.py:2922: RuntimeWarning: invalid value encountered in divide\n  c /= stddev[:, None]\n/Users/julietmalkowski/Desktop/Research/Micro/env/lib/python3.10/site-packages/numpy/lib/_function_base_impl.py:2923: RuntimeWarning: invalid value encountered in divide\n  c /= stddev[None, :]\n```\n:::\n:::\n\n\n::: {#73f714b0 .cell execution_count=3}\n``` {.python .cell-code}\nmask = ((correlation > 0.75) & (correlation < 0.99)) | ((correlation < -0.75) & (correlation > -0.99))\n\ntriangle_mask = np.tri(correlation.shape[0], k=0)\n\n# Plotting\nfig = plt.figure()\n# Put in title and axis labels\nfig.suptitle('Correlation Matrix of OTU Counts Over Time')\nax = fig.add_subplot(111)\n\n# Use the mask to display the significant correlations\nmasked_correlation = np.ma.masked_where(~mask, correlation)\ntriangle_mask[triangle_mask == 0] = np.nan\n\ncax = ax.matshow(masked_correlation, cmap='coolwarm', vmin=-1, vmax=1)\nax.imshow(triangle_mask, cmap='twilight')\nfig.colorbar(cax)\n\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](correlation_matrix_files/figure-html/cell-4-output-1.png){width=535 height=445}\n:::\n:::\n\n\n## Correlation with Spearman Correlation Coefficient\nBefore learning about Spearman’s correllation it is important to understand \nSpearman's Correlation Coefficient assumes a monotonic relationship- where the value of one variable increases then the other never does\nA monotonic relationship is a relationship that does one of the following: (1) as the value of one variable increases, so does the value of the other variable; or (2) as the value of one variable increases, the other variable value decreases\n\n\n::: {#2633947b .cell execution_count=5}\n``` {.python .cell-code}\ncorr_matrix, p_matrix = scipy.stats.spearmanr(filtered_abundance_time, axis=1)\ncorr_matrix[p_matrix>0.05] = np.nan\ncorr_matrix[corr_matrix>0.99] = np.nan\nmask = np.triu(np.ones_like(corr_matrix, dtype=bool))\nmasked_correlation_matrix = np.ma.masked_where(mask, corr_matrix)\n\nfig = plt.figure()\nfig.suptitle('P-value Matrix of OTU Counts Over Time Using Spearman')\nax = fig.add_subplot(111)\n\ncax = ax.pcolormesh(masked_correlation_matrix,cmap='coolwarm', vmin=-1, vmax=1)\nfig.colorbar(cax)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](correlation_matrix_files/figure-html/cell-6-output-1.png){width=574 height=459}\n:::\n:::\n\n\n# Correlation between Input Parameters and OTU Counts\n\n",
    "supporting": [
      "correlation_matrix_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}