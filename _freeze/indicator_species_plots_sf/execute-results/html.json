{
  "hash": "83765ce8de8441198cde8f394d4f0b34",
  "result": {
    "markdown": "---\ntitle: Indicator Species Analysis\nformat: html\necho: false\n---\n\n```{ojs}\n//| panel: input\nviewof processjs = Inputs.radio(\n  new Map([\n    [\"Anaerobic Digester Influent\", \"AD\"], \n    [\"Activated Sludge\", \"AS\"], \n    [\"Effluent\", \"Eff\"], \n    [\"Influent\", \"Inf\"], \n    [\"Trickling Filter\", \"TF\"], \n    [\"Anaerobic Digester Effluent\", \"TSS\"], \n    [\"Waste Activated Sludge\", \"WAS\"]\n  ]),\n  {value: \"AD\", label: \"Select a Sampling Location:\"}\n)\n```\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n```{ojs}\ngenus = FileAttachment(\"indicator_data/indicator_genus_process.csv\").csv({typed: true})\n\ngenusProcess = genus.filter(function(table) {\n  return processjs == table.Process\n})\n\notu = FileAttachment(\"indicator_data/indicator_otu_season.csv\").csv({typed: true})\n\notuProcess = otu.filter(function(table) {\n  return processjs == table.Process\n})\n\notuProcessSeason = otuProcess.filter(function(table) {\n  return collocationsCat.includes(table.seasoncooccurrence)\n})\n\notuProcessSeason2 = otuProcess.filter(function(table) {\n  return collocationsCat == table.seasoncooccurrence\n})\n```\n\n::: {.cell}\n\n:::\n\n\n#### All Significant Indicator Genera in ${processjs}\n\n```{ojs}\nInputs.table(genusProcess)\n```\n\n\n#### Co-occurence of Indicator OTUs by Season in ${processjs}\n\n```{ojs}\nurlad = FileAttachment('indicator_data/AD_euler.svg')\nurlas = FileAttachment('indicator_data/AS_euler.svg')\nurleff = FileAttachment('indicator_data/Eff_euler.svg')\nurlinf = FileAttachment('indicator_data/Inf_euler.svg')\nurltf = FileAttachment('indicator_data/TF_euler.svg')\nurltss = FileAttachment('indicator_data/TSS_euler.svg')\nurlwas = FileAttachment('indicator_data/WAS_euler.svg')\n\n{\n  if (processjs == \"AD\") {\n    return urlad.image()\n  } else if (processjs == \"AS\") {\n    return urlas.image()\n  } else if (processjs == \"Eff\") {\n    return urleff.image()\n  } else if (processjs == \"Inf\") {\n    return urlinf.image()\n  } else if (processjs == \"TF\") {\n    return urltf.image()\n  } else if (processjs == \"TSS\") {\n    return urltss.image()\n  } else if (processjs == \"WAS\") {\n    return urlwas.image()\n  }\n}\n\n```\n\n```{ojs}\nviewof collocations = Inputs.checkbox([\"Fall\",\"Spring\",\"Summer\",\"Winter\"], {label: \"Select seasons to view OTUs:\"})\ncollocationsCat = collocations.join(\"-\")\n```\n\n\n::: {.panel-tabset}\n\n## Exclusive list\n\n```{ojs}\nInputs.table(otuProcessSeason2, {\n  header: {\n    pvalue: \"P value\",\n    seasoncooccurrence: \"Season Overlap\"\n  }\n})\n```\n\n\n## Inclusive list\n\n```{ojs}\nInputs.table(otuProcessSeason, {\n  header: {\n    pvalue: \"P value\",\n    seasoncooccurrence: \"Season Overlap\"\n  }\n})\n```\n\n\n:::\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}